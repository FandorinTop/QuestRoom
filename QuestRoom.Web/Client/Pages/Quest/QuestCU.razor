@page "/manage/Quest/{Id:int?}"

@using QuestRoom.ViewModel.Personal.Responce
@using QuestRoom.ViewModel.Quest.Request
@using QuestRoom.ViewModel.QuestActor.Request
@using QuestRoom.ViewModel.QuestActor.Responce
@using QuestRoom.ViewModel.QuestSession.Request
@using QuestRoom.ViewModel.Type.Responce
@inject NavigationManager navManager;

<div class="mat-layout-grid">
    <div class="mat-layout-grid-inner">
        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6" style="text-align: center;">
            Quest Info
        </div>
        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6" style="text-align: center;">
            Personal
        </div>

        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6" style="border: dashed">
            <EditForm Model="Model" OnValidSubmit="Success">
                <DataAnnotationsValidator />
                <div class="mat-layout-grid">
                    <div class="mat-layout-grid-cell mat-layout-grid-cell-span">
                        @Title
                    </div>
                    <MatDivider />
                    <br />
                    <div class="mat-layout-grid-inner">
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                            <p>
                                <MatTextField Label="@nameof(Model.Name)" @bind-Value="Model.Name" FullWidth="true" />
                                <ValidationMessage For="@(() => Model.Name)" />
                            </p>
                        </div>
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                            <p>
                                <MatTextField Label="@nameof(Model.Description)" @bind-Value="Model.Description" FullWidth="true" />
                                <ValidationMessage For="@(() => Model.Description)" />
                            </p>
                        </div>
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
                            <p>
                                <MatNumericUpDownField Label="@nameof(Model.AgeRestriction)" @bind-Value="Model.AgeRestriction" FullWidth="true" />
                                <ValidationMessage For="@(() => Model.AgeRestriction)" />
                            </p>
                        </div>
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
                            <p>
                                <MatNumericUpDownFieldInternal Label="@nameof(Model.Duration)" @bind-Value="Model.Duration" FullWidth="true" />
                                <ValidationMessage For="@(() => Model.Duration)" />
                            </p>
                        </div>
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
                            <p>
                                <MatNumericUpDownFieldInternal Label="@nameof(Model.MinPlayerCount)" @bind-Value="Model.MinPlayerCount" FullWidth="true" />
                                <ValidationMessage For="@(() => Model.MinPlayerCount)" />
                            </p>
                        </div>
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
                            <p>
                                <MatNumericUpDownFieldInternal Label="@nameof(Model.MaxPlayerCount)" @bind-Value="Model.MaxPlayerCount" FullWidth="true" />
                                <ValidationMessage For="@(() => Model.MaxPlayerCount)" />
                            </p>
                        </div>
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-6">
                            <p>
                                <MatNumericUpDownFieldInternal Label="@nameof(Model.Price)" @bind-Value="Model.Price" FullWidth="true" />
                                <ValidationMessage For="@(() => Model.Price)" />
                            </p>
                        </div>
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                            <p>
                                <MatAutocompleteList Context="type"
                                    @ref = "TypeAutocompleteList"
                                                     FullWidth="true"
                                                     Items="@TypeSelector"
                                                     TItem="GetQuestTypeNameViewModel"
                                                     Label="Select Type"
                                                     CustomStringSelector="@(i => i?.Name)"
                                                     ValueChanged="OnNullType">
                                    <ItemTemplate>
                                        <div style="display: flex; flex-direction: row; width: 100%;">
                                            <div style="flex: 1;">@type?.Name</div>
                                        </div>
                                    </ItemTemplate>
                                </MatAutocompleteList>
                                <ValidationMessage For="@(() => Model.QuestTypeId)" />
                            </p>
                        </div>



                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
                        </div>
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
                            <MatButton Type="submit" Raised="true">Send</MatButton>
                        </div>
                        <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
                        </div>
                    </div>
                </div>
            </EditForm>
        </div>

        <div hidden="@(!Id.HasValue)" class="mat-layout-grid-cell mat-layout-grid-cell-span-6" style="text-align: center;">
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-12">
                <p>
                    <MatAutocompleteList @ref = "@autocompleteList"
                                         Context="type"
                                         disabled="@(!Personals.Any())"
                                         Items="@Personals"
                                         TItem="GetPersonalViewModel"
                                         Label="@AddPersonalLabel"
                                         CustomStringSelector="@(i => i?.Name)"
                                         FullWidth="true"
                                         ValueChanged="AddActor">
                        <ItemTemplate>
                            <div style="display: flex; flex-direction: row; width: 100%;">
                                <div style="flex: 1;">@type?.Name</div>
                            </div>
                        </ItemTemplate>
                    </MatAutocompleteList>
                </p>
            </div>
            <br />
            <br />
            <br />
            <MatTable Context="lesson"
                      disabled="@(!Id.HasValue)"
                      Items="Actors"
                      ShowPaging="false"
                      SelectionChanged="@(async action => await SelectionChangedEvent(action))"
                      AllowSelection="true">
                <MatTableHeader>
                    <th>Action</th>
                    <th>PersonalId</th>
                    <th>Personal name</th>
                </MatTableHeader>
                <MatTableRow>
                    <td>
                        <MatButton Raised="true" OnClick="@(async e => await DeleteActor())" Icon="restore_from_trash" title="Delete Actor"></MatButton>
                    </td>
                    <td>@lesson.PersonalId</td>
                    <td>@lesson.PersonalName</td>
                </MatTableRow>
            </MatTable>
        </div>
    </div>
</div>